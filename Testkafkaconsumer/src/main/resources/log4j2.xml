<?xml version="1.0" encoding="UTF-8"?>
<!--启动项设置为 trace，加载 springboot 启动内部各种详细输出-->
<Configuration status="trace">
    <Appenders>
        <!--添加一个控制台追加器-->
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout>
                <pattern>[%d{yyyy-MM-dd HH:mm:ss,SSS} %t] [%p] [%c] %L - %m%n</pattern>
            </PatternLayout>
        </Console>
        
        <!--添加一个文本追加器，文件位于根目录下，名为log.log-->
        <RollingFile name="File" fileName="logs/testkafkaconsumer.log" filePattern="logs/testkafkaconsumer.%d{yyyy-MM-dd}.log" append="true">
            <!-- 输出格式 -->
            <PatternLayout pattern="[%l] [%t] [%-4r] [%d{yyyy-MM-dd HH:mm:ss,SSS}] [%p] \: %m%n"/>
            <!-- 设置策略 -->
            <Policies>
                <!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数：
                    interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，
                        比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟
                    modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，
                        则封存时间将以0点为边界进行偏移计算。比如，modulate=true，interval=4hours，
                        那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00，
                        之后的封存时间依次为08:00，12:00，16:00
                 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </Appenders>
    <Loggers>
        <Logger name="org.apache.catalina.util.LifecycleBase" level="error" />
        <Logger name="org.apache.coyote.http11.Http11NioProtocol" level="warn" />
        <Logger name="org.apache.tomcat.util.net.NioSelectorPool" level="warn" />
        <Logger name="org.springframework" level="warn" />
        <!--记录 qg.fangrui.boot 包及其子包 debug 及其以上的记录，并输出到文件中-->
        <Logger name="com.testkafka" level="info">
            <!-- AppenderRef 可以控制文件输出对象-->
            <AppenderRef ref="File" />
        </Logger>
        <!--根记录全部输出到控制台上-->
        <Root level="info">
            <AppenderRef ref="Console" />
        </Root>
    </Loggers>
</Configuration>